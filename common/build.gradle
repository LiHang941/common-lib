apply plugin: 'java-library'
apply plugin: 'maven-publish'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.github.lihang941'
            artifactId = 'common-lib'
            version = '0.0.1'
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "http://dev.cqultra.com:8008/nexus/repository/lihang941/"
            credentials {
                username localProperties.getProperty('publish.user')
                password localProperties.getProperty('publish.password')
            }
        }
    }
}


dependencies {
    compileOnly "org.apache.commons:commons-io:$commonIOVersion"
    compileOnly "org.apache.commons:commons-lang3:$commonLang3Version"
    compileOnly "com.alibaba:fastjson:$fastjsonVersion"
    compileOnly "org.mdvsc.common:service:$serviceCommonVersion"
    compileOnly "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"
    compileOnly "com.github.pagehelper:pagehelper:$pagehelperVersion"
    compileOnly "org.mybatis:mybatis:$mybatisVersion"
    compileOnly "io.vertx:vertx-grpc:$vertxVersion"
    compileOnly "com.squareup.okhttp3:okhttp:$OkHttpVersion"
    compileOnly 'commons-codec:commons-codec:1.11'
    testImplementation 'org.mybatis.generator:mybatis-generator-core:1.3.7'
    testImplementation "org.postgresql:postgresql:42.2.2"
    testImplementation 'org.freemarker:freemarker:2.3.28'
    testImplementation "com.alibaba:fastjson:$fastjsonVersion"
    testImplementation "org.apache.commons:commons-io:$commonIOVersion"
    testImplementation "org.apache.commons:commons-lang3:$commonLang3Version"
}